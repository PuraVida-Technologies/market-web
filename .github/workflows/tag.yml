name: Tag an image
on:
  push:
    tags:
      - v*

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: ${{ vars.GAR_LOCATION }}
  APP_NAME: ${{ vars.APP_NAME }}
  IMG_REPOSITORY: ${{ vars.IMG_REPOSITORY }}
  HELM_REPOSITORY: ${{ vars.HELM_REPOSITORY }}

jobs:
  check-validity:
    name: Check if semver is valid
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.semver_check.outputs.result }}
    steps:
    - uses: actions-ecosystem/action-regex-match@v2
      id: regex-match
      with:
        text: ${{ github.ref_name }}
        regex: '^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'
  
    - name: check regex result
      id: semver_check
      run: |-
        if [[ "$GITHUB_REF_NAME"=="${{ steps.regex-match.outputs.match }}" ]] ; then
          echo "$GITHUB_REF_NAME is a valid semantic version"
          echo "result=valid" >> $GITHUB_OUTPUT
        else
          echo "$GITHUB_REF_NAME is not valid version Helm release won't be executed!"
          echo "result=invalid" >> $GITHUB_OUTPUT
        fi

  tag-release:
    name: Tag the image and update the Helm chart
    needs: check-validity
    if: needs.check-validity.outputs.result == 'valid'
    runs-on: ubuntu-latest
    steps:

    - name: Authenticate
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
    
    - name: Set up yq
      uses: frenck/action-setup-yq@v1.0.2

    - name: Get image digest
      run: |-
        DIGEST=$(gcloud container images describe "$IMG_REPOSITORY/$PROJECT_ID/$APP_NAME:$GITHUB_SHA" --format="value(image_summary.digest)")
        echo "IMAGE_DIGEST=$DIGEST" >>$GITHUB_ENV
    
    - name: Checkout Helm Repository
      uses: actions/checkout@master
      with: 
        repository: ${{ env.HELM_REPOSITORY }}
        token: ${{ secrets.HELM_REPO_TOKEN }}
        path: helm-charts

    - name: Set Application & Chart Version
      run: |
        TAG_TRIMMED=$(echo "$GITHUB_REF_NAME" | sed -e "s/v//g")
        echo "CHART_VERSION=$TAG_TRIMMED" >>$GITHUB_ENV
        echo "APPLICATION_VERSION=$TAG_TRIMMED" >>$GITHUB_ENV

    - name: Tag the image
      run: |-
        gcloud container images add-tag "$IMG_REPOSITORY/$PROJECT_ID/$APP_NAME:$GITHUB_SHA" "$IMG_REPOSITORY/$PROJECT_ID/$APP_NAME:$APPLICATION_VERSION"

    - name: Set Image Digest, Chart version & App version
      run: |
        yq -i '.image.digest = "${{ env.IMAGE_DIGEST }}"' 'helm-charts/charts/${{ env.APP_NAME }}/values.yaml'
        yq -i '.version = "${{ env.CHART_VERSION }}"' 'helm-charts/charts/${{ env.APP_NAME }}/Chart.yaml'
        yq -i '.appVersion = "${{ env.APPLICATION_VERSION }}"' 'helm-charts/charts/${{ env.APP_NAME }}/Chart.yaml'

    - name: Push Helm Chart Repo
      run: |
        cd ./helm-charts
        git add .
        git config user.name puravida-bot
        git config user.email bot@pvbtc.cloud
        git commit -am "chore: Update Chart Version to $GITHUB_REF_NAME"
        git push

